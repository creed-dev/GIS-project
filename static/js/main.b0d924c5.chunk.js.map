{"version":3,"sources":["redux/app-reducer.js","ExportCSV.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["SET_ARRAY","ADD_TO_EXPORT","REMOVE_FROM_ARRAY","initialState","importArray","isLoaded","exportArray","ExportCSV","csvData","fileName","className","onClick","e","wb","Sheets","data","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","exportToCSV","App","inputEl","useRef","useState","popUpData","setPopUpData","isVisiblePopup","setIsVisiblePopup","isVisibleImport","setIsVisibleImport","dispatch","useDispatch","useSelector","app","onAddToExport","number","area","zone","coords","obj","addToExport","onRemoveFromArray","index","removeFromArray","ref","id","onChange","readXlsxFile","current","files","then","rows","array","for","defaultState","center","zoom","map","onMouseEnter","geometry","JSON","parse","onMouseLeave","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","state","action","slice","newArray","filter","item","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0d924c5.chunk.js","sourcesContent":["// action types\r\nconst SET_ARRAY = 'app-reducer/SET_ARRAY';\r\nconst ADD_TO_EXPORT = 'app-derucer/ADD_TO_EXPORT';\r\nconst REMOVE_FROM_ARRAY = 'app-reducer/REMOVE_FROM_ARRAY';\r\n\r\n// initial state\r\nconst initialState = {\r\n\timportArray: null,\r\n\tisLoaded: false,\r\n\texportArray: [],\r\n};\r\n\r\n// reducer\r\nexport const appReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_ARRAY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\timportArray: action.array.slice(1),\r\n\t\t\t\tisLoaded: true,\r\n\t\t\t};\r\n\t\tcase ADD_TO_EXPORT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texportArray: [...state.exportArray, { ...action.obj }],\r\n\t\t\t};\r\n\t\tcase REMOVE_FROM_ARRAY:\r\n\t\t\tconst newArray = [...state.importArray].filter(\r\n\t\t\t\t(item, index) => index !== action.index\r\n\t\t\t);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\timportArray: newArray,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n// action creators\r\nexport const setArray = array => ({\r\n\ttype: SET_ARRAY,\r\n\tarray,\r\n});\r\n\r\nexport const addToExport = obj => ({\r\n\ttype: ADD_TO_EXPORT,\r\n\tobj,\r\n});\r\n\r\nexport const removeFromArray = index => ({\r\n\ttype: REMOVE_FROM_ARRAY,\r\n\tindex,\r\n});\r\n","import React from 'react';\r\n\r\nimport * as FileSaver from 'file-saver';\r\n\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport const ExportCSV = ({ csvData, fileName }) => {\r\n\tconst fileType =\r\n\t\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n\r\n\tconst fileExtension = '.xlsx';\r\n\r\n\tconst exportToCSV = (csvData, fileName) => {\r\n\t\tconst ws = XLSX.utils.json_to_sheet(csvData);\r\n\r\n\t\tconst wb = { Sheets: { data: ws }, SheetNames: ['data'] };\r\n\r\n\t\tconst excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n\r\n\t\tconst data = new Blob([excelBuffer], { type: fileType });\r\n\r\n\t\tFileSaver.saveAs(data, fileName + fileExtension);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName=\"btn__app btn__app_mb\"\r\n\t\t\tonClick={e => exportToCSV(csvData, fileName)}\r\n\t\t>\r\n\t\t\tСкачать выбранные данные\r\n\t\t</button>\r\n\t);\r\n};\r\n","import React, { useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport readXlsxFile from 'read-excel-file';\nimport { addToExport, removeFromArray, setArray } from './redux/app-reducer';\nimport { YMaps, Map, Polygon } from 'react-yandex-maps';\nimport { ExportCSV } from './ExportCSV';\n\nfunction App() {\n\tconst inputEl = useRef();\n\n\tconst [popUpData, setPopUpData] = useState(null);\n\tconst [isVisiblePopup, setIsVisiblePopup] = useState(false);\n\tconst [isVisibleImport, setIsVisibleImport] = useState(true);\n\n\tconst dispatch = useDispatch();\n\tconst { importArray, isLoaded, exportArray } = useSelector(({ app }) => app);\n\n\tconst onImportFile = () => {\n\t\treadXlsxFile(inputEl.current.files[0]).then(rows => {\n\t\t\tdispatch(setArray(rows));\n\t\t});\n\t\tsetIsVisibleImport(false);\n\t};\n\n\tconst onMouseEnter = (index, number, area, zone, coords) => {\n\t\tsetPopUpData({\n\t\t\tindex,\n\t\t\tnumber,\n\t\t\tarea,\n\t\t\tzone,\n\t\t\tcoords,\n\t\t});\n\t\tsetIsVisiblePopup(true);\n\t};\n\n\tconst onMouseLeave = () => {\n\t\tsetIsVisiblePopup(false);\n\t};\n\n\tconst onAddToExport = (number, area, zone, coords) => {\n\t\tconst obj = {\n\t\t\tnumber,\n\t\t\tarea,\n\t\t\tzone,\n\t\t\tcoords,\n\t\t};\n\t\tdispatch(addToExport(obj));\n\t};\n\n\tconst onRemoveFromArray = index => {\n\t\tdispatch(removeFromArray(index));\n\t};\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t{isVisibleImport && (\n\t\t\t\t<div>\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={inputEl}\n\t\t\t\t\t\tclassName=\"visually-hidden\"\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tid=\"file\"\n\t\t\t\t\t\tonChange={onImportFile}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"btn__app\">\n\t\t\t\t\t\t<label for=\"file\">Загрузите .xlsx файл</label>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{isLoaded && (\n\t\t\t\t<YMaps>\n\t\t\t\t\t<Map\n\t\t\t\t\t\tclassName=\"map\"\n\t\t\t\t\t\tdefaultState={{\n\t\t\t\t\t\t\tcenter: [55.027699226608924, 82.89660746004719],\n\t\t\t\t\t\t\tzoom: 15,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{importArray.map((obj, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Polygon\n\t\t\t\t\t\t\t\t\t\tkey={`${obj}_${index}`}\n\t\t\t\t\t\t\t\t\t\tclassName=\"map__polygon\"\n\t\t\t\t\t\t\t\t\t\tonMouseEnter={() =>\n\t\t\t\t\t\t\t\t\t\t\tonMouseEnter(index, obj[0], obj[1], obj[2], obj[3])\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tgeometry={[JSON.parse('[' + obj[3] + ']')]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{isVisiblePopup && (\n\t\t\t\t\t\t\t\t<div onMouseLeave={() => onMouseLeave()} className=\"popup\">\n\t\t\t\t\t\t\t\t\t<div>Номер: {popUpData.number}</div>\n\t\t\t\t\t\t\t\t\t<div>Площадь: {popUpData.area}</div>\n\t\t\t\t\t\t\t\t\t<div>Зона: {popUpData.zone}</div>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"popup__btn\"\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tonAddToExport(\n\t\t\t\t\t\t\t\t\t\t\t\tpopUpData.number,\n\t\t\t\t\t\t\t\t\t\t\t\tpopUpData.area,\n\t\t\t\t\t\t\t\t\t\t\t\tpopUpData.zone,\n\t\t\t\t\t\t\t\t\t\t\t\tpopUpData.coords\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tОставить объект\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button onClick={() => onRemoveFromArray(popUpData.index)}>\n\t\t\t\t\t\t\t\t\t\tУдалить объект\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Map>\n\t\t\t\t</YMaps>\n\t\t\t)}\n\t\t\t{exportArray.length > 0 && (\n\t\t\t\t<ExportCSV csvData={exportArray} fileName={'updated-perspective'} />\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from 'redux';\r\nimport { appReducer } from './app-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tapp: appReducer,\r\n});\r\n\r\nlet store = createStore(\r\n\trootReducer,\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}